{
    "name": "Consume Alcohol Tracker (iOS)",
    "position": "Creator",
    "link": "https://apps.apple.com/us/app/consume-alcohol-tracker/id1633718776",
    "video_link": "https://www.youtube.com/embed/nUBm_4K6tp0",
    "logo": "consume.png",
    "color": "rgb(245, 245, 245)",
    "technologies": "Swift, SwiftUI, XCode",
    "story": "Last summer, I embarked on a personal project to develop an iOS alcohol tracking application called Consume. This idea not only aligned with my growing interest in health technology but also served as an opportunity to learn XCode, Swift, and SwiftUI. As a health-conscious individual, I noticed that many people, even those dedicated to a healthy lifestyle, often treated alcohol consumption as an exception, losing control and agency as they drink. To address this issue, I envisioned an application that would empower users to maintain control while drinking by tracking their alcohol intake. <br/> <br/> I began by designing a user-friendly iPhone application using XCode, Swift, and SwiftUI. I quickly identified ease of use as the fundamental challenge. Intoxicated users were not inclined to log drinks on their phone, so I developed a complementary Apple Watch application to streamline the process with a simple tap on the wrist. Seamless communication between the iPhone and Apple Watch ensured data remained synchronized. <br/> <br/> More recently, I incorporated an <a style='text-decoration: underline;' href='https://support.apple.com/guide/shortcuts/welcome/ios' target='_blank'>Apple Shortcut</a> for easy drink logging and connected it to the iPhone's “Back Tap” feature, as demonstrated in <a style='text-decoration: underline;' href='https://www.youtube.com/watch?t=34&v=aZzT538F92Y&feature=youtu.be' target='_blank'>this MKBHD video</a>. This innovative approach allowed users to log a drink in the Consume app by simply double-tapping the back of their iPhone with their finger. <br/> <br/> Developing the app proved to be a rewarding experience, as it allowed me to delve into the Apple ecosystem, refine my product iteration skills with an application that offered real-world utility, and further hone my abilities in self-directed learning. In addition, using SwiftUI established an understanding of declarative user interfaces, which has been instrumental in enhancing my grasp of the React architecture."
}